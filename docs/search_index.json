[
["index.html", "O Zen do R Bem-vindo", " O Zen do R Caio Lente Bem-vindo Este é O Zen do R, seja bem-vindo! O objetivo deste livro é ensinar ao leitor algumas formas simples de melhorar a organização de seus projetos de análise de dados em R. Para auxiliar na fixação desses princípios, cada um dos capítulos é comparado com uma das oito práticas do Nobre Caminho Óctuplo do Budismo; assim como a Roda do Dharma, os caminhos deste livro têm a intenção de livrar o leitor do sofrimento (ao programar em R). O texto deste livro foi escrito por Caio Lente com o suporte, ajuda e revisão do time da Curso-R. Ele está disponível gratuitamente no Github sob a licença GNU GPLv3. Ele foi escrito em RMarkdown com o pacote bookdown. "],
["introducao.html", "1 Introdução 1.1 Sobre o livro 1.2 O que você vai aprender 1.3 O que você não vai aprender 1.4 Pré-requisitos 1.5 Principais referências", " 1 Introdução O Zen do R tem o objetivo de ser um livro sobre programação para não-programadores. Diferentemente dos manuais secos e técnicos com os quais geralmente nos deparamos na internet, o tom deste livro é leve e pretende ser bem-humorado; assim, a sua motivação principal é atrair o máximo possível de pessoas para um mundo onde a programação é uma ferramenta e não um obstáculo no processo de análise de dados. Aqui você vai ver com frequência o uso das primeira e segunda pessoas porque no fundo eu gostaria que o livro fosse como uma conversa. A escolha do R é parcialmente arbitrária. Nada impede de você usar Python para a análise de dados, mas ao longo de alguns anos de experiência os autores notaram que o fato de o R ter sido feito com análise de dados em mente acaba sendo uma vantagem muito difícil de ignorar. Fora isso, o tidyverse, as infinitas ferramentas do RStudio e o engajamento da comunidade fazem com que nós achemos o R a verdadeira linguagem do data science. Por isso, O Zen do R (caso não tenha ficado claro no título) vai abordar apenas fluxos de trabalho com a linguagem R de programação. 1.1 Sobre o livro A grande piada do livro é que o caminho para o fluxo ideal de programação é análogo ao caminho descrito pelo Budismo para a libertação do espírito. Parece muito estranho que essas duas coisas tenham alguma relação, mas a vida é uma boa metáfora para muitos processos que encontramos no dia-a-dia! 1.1.1 Budismo Eu acho o Budismo um assunto no geral muito interessante e pelo qual tenho um grande respeito. Por isso não gostaria que qualquer praticante se sentisse ofendido pelas comparações que aqui serão feitas. Para ler o O Zen do R você obviamente não precisa saber nada sobre o Budismo, mas vale a pena ter um breve contexto do que é o Nobre Caminho Óctuplo e para quê ele serve: O Nobre Caminho Óctuplo é um antigo resumo do caminho das práticas budistas que levam à libertação do samsara, o doloroso ciclo do renascimento. Ele consiste de oito práticas: compreensão correta, pensamento correto, fala correta, ação correta, meio de vida correto, esforço correto, consciência correta e concentração correta. — WIkipédia Todas essas oito práticas são bastante abstratas e se aplicam em inúmeras situações, fazendo com que se encaixem muito bem ao tópico que estamos trabalhando. Dessa forma, em cada capítulo você aprenderá sobre uma boa prática em projetos de análise de dados e, para gravar melhor a informação, será apresentado também a um dos oito caminhos. A ideia é utilizar os nomes e definições grandiosas e espirituais do Nobre Caminho Óctuplo como uma ferramenta de fixação do aprendizado. Pense no que você aprender nesse livro como um conjunto de práticas que, quando cumpridas, são capazes de livrá-lo da dor da programação. 1.1.2 Você é um não-programador? O que eu quero dizer com o termo “não-programador” no começo desse capítulo é meramente “uma pessoa que não tem treinamento formal em programação”. Eu, por exemplo, fiz Ciência da Computação e portanto não posso escapar do fato de que sou um programador. Se você é treinado em Estatística, mas precisa usar o R para fazer suas análises, então você provavelmente vai tirar um bom proveito deste livro. Aqui você não vai aprender a programar, mas sim a como fazer com que o seu fluxo de programação não atrapalhe o seu fluxo de análise! O ideal é que a programação te ajude e por isso saber usar a ferramenta de forma correta é essencial. 1.2 O que você vai aprender Essencialmente você vai aprender a usar dois pacotes e como trabalhar com quatro aspectos do processo de análise de dados: ambiente, versões, dados e arquivos. Não é necessário ler o livro em ordem porque cada uma dessas quatro sessões são completamente independentes! Os assuntos abordados são, em ordem: .RData e histórico: como fazer com que o RStudio não guarde nada que você fez para que você não fique mal acostumado (equivalente à Consciência Correta); Rproj e diretórios: como usar o conceito de “project” para organizar seu projeto e não se perder nos diretórios (equivalente ao Esforço Correto); Git e Github: como usar ferramentas de controle de versão para que você não corra o risco de perder seu progresso (equivalente à Compreensão Correta); Packrat: como usar o pacote packrat para manter suas dependências em ordem e atualizadas (equivalente ao Pensamento Correto); Data e data-raw: como organizar seus dados e scripts de tratamento em pastas com objetivos claros e distintos (equivalente à Ação Correta); RDSs intermediários: como quebrar o processo de tratamento em passos que podem ser salvos e reutilizados com custo mínimo (equivalente à Fala Correta); Reiniciar a sessão: como e porquê reiniciar sua sessão durante o processo de desenvolvimento (equivalente à Concentração Correta) e Arquivos minimalistas: como é o jeito ideal de dividir o seu código para que tudo seja rápido e fácil de encontrar (equivalente ao Meio de Vida Correto). Sinta-se livre para pular todos os tópicos sobre os quais você sentir que já sabe o suficiente. Mas não se iluda! Nenhum dos caminhos é inútil ou pode ser simplesmente ignorado… Se você quiser alcançar a cessação do sofrimento, você precisa seguir o Nobre Caminho Óctuplo. Ao deixar um desses princípios para trás, você está pedindo para ter que resolver algum problema lá na frente. 1.3 O que você não vai aprender Primeiramente, você não vai aprender a programar R. Esse tópico é extremamente extenso e já existem livros o suficiente para te ajudar (vide R for Data Science), então não vou me preocupar com os detalhes do seu código ou com qual guia de estilo você segue. Se você gosta de fazer códigos longos e velozes usando o base-r, se você ama as pipelines do tidyverse, se você paraleliza todos os seus loops… Nada disso importa aqui; não sou sua mãe para dizer qual é o melhor jeito de programar (e também não tenho paciência para entrar em mais nenhum debate “base vs. tidyverse”). Aqui você vai conhecer somente as melhores ferramentas para organizar o seu fluxo de programação. Apesar de terem nomes parecidos, O Zen do R e O Zen do Python são diferentes justamente por causa disso. O livro do Python pretende te dar sugestões de como organizar e escrever o seu código, o que não farei aqui. 1.4 Pré-requisitos Como talvez já tenha ficado claro, um dos principais pré-requisitos deste livro é saber a programar pelo menos um pouco de R. Você não precisa ser um profissional, mas, para ter a necessidade de melhorar o seu fluxo de análise, você antes precisa estar fazendo alguma análise. Fora isso, o segundo principal pré-requisito é um ambiente de desenvolvimento. Grande parte das dicas do livro são baseadas em funcionalidades integradas ao RStudio, então se você quiser tirar o maior proveito possível dos ensinamentos talvez valha à pena instalar a IDE. Ainda no tocante ao R, você precisará ter instalado pelo menos os três pacotes a seguir: # Conteúdo principal do livro install.packages(c(&quot;usethis&quot;, &quot;packrat&quot;)) # Se você quiser reproduzir os exemplos install.packages(&quot;tidyverse&quot;) Você também precisa de um computador funcionando com um sistema operacional razoavelmente moderno. E uma conexão à internet. 1.5 Principais referências O Zen do R se baseia em inúmeras referências que normalmente serão citadas juntamente com o próprio conteúdo. Mas algumas mais gerais acabariam sendo citadas o tempo todo e portanto acabarão ficando aqui: R for Data Science; bookdown: Authoring Books and Technical Documents with R Markdown; usethis; Packrat: Reproducible package management for R e O blog da Curso-R. "],
["ambiente.html", "2 Ambiente 2.1 Sobre o ambiente 2.2 .RData e histórico 2.3 Rproj e diretórios", " 2 Ambiente 2.1 Sobre o ambiente Lorem ipsum 2.2 .RData e histórico O primeiro passo para o workflow ideal de análise de dados já pode se provar bem complicado se você for o tipo de pessoa que não muda os ajustes padrões do RStudio. A primeira coisa que eu vou pedir que você faça é desativar a memória do R. Isso parece ser é bastante drástico. Caso você não saiba do que eu estou falando, faça o seguinte: Abra o RStudio e crie um novo arquivo; Gere algumas variáveis e salve o arquivo em qualquer lugar; Feche o RStudio e Abra ele de novo. Agora observe a aba Environment (Ambiente) do seu RStudio. As variáveis que você criou estão lá? Se sim, isso é a “memória” do seu R trabalhando a seu favor. No meu computador eu criei um arquivo chamado teste.R com o seguinte código: a &lt;- 1 m &lt;- dplyr::as_tibble(mtcars) Ao executá-lo, o meu ambiente ficou assim: A grande questão é que, mesmo depois de fechar e abrir o RStudio, o meu ambiente não mudou nada! Isso só é possível porque o R cria, por padrão, dois arquivos secretos no seu computador: o .RData e o .Rhistory. O objetivo deles é armazenar todos os objetos que foram criados na sua sessão e todos os comandos que você executou mesmo que o R não esteja rodando no seu computador; assim, quando você reinicializa o R, ele lê esses arquivos e reconstrói tanto o seu ambiente quanto o seu histórico de comandos. À primeira vista isso parece uma funcionalidade honestamente incrível. O fato de o R ter memória permite que você não se preocupe tanto com seus dados e possa dormir tranquilo sabendo que pode fechar o RStudio sem perder nada da sua sessão. É quase como se você pudesse parar uma análise no meio e retomá-la a qualquer momento. Mas a realidade é muito mais sombria do que parece… Ao permitir que o R lembre tudo por você, não há nenhum insentivo para que o seu código seja de fato reprodutível. 2.2.1 Consciência correta Um dois princípios do Nobre Caminho Óctuplo é denominado Consciência Correta. Algumas interpretações dele sugerem que esse princípio gira em torno da resistência aos desejos, à retenção dos ensinamentos budistas, mas aqui eu me refiro ao seguinte conceito: Consciência Correta: nunca esteja distraído, esteja consciente do que faz. A consciência permite que um não deseje ou se prenda a nenhum estado ou objeto transitório. Assim, no Zen do R, sua tarefa será estar sempre consciente do que programa e nunca deixar esta tarefa na mão da sua ferramenta. Isso implica em abandonar o conforto do .RData e do .Rhistory para ser obrigado a sempre programar de forma reprodutível. 2.2.2 Porque desistir desse recurso Existem dois motivos principais para adotar essa atitude radical, ambos com consequências bastante observáveis no dia-a-dia. O primeiro e talvez mais importante diz respeito ao código. Note que, ao abrir o arquivo teste.R de novo, as duas linhas que usei para criar os objetos essencialmente perderam suas funções. Por já estarem prontamente disponíveis no ambiente, eu não tenho nenhuma necessidade real pelo código que os gera! Nessa hora, um programador incauto pode cometer o erro de alterar ou deletar essas linhas sem notar que o fez. Neste caso é fácil lembrar qual é o código correto, mas normalmente essa é uma tarefa consideravelmente mais difícil. Desta forma, não permitir que o R lembre dos seus objetos por você faz com que o código de geração tenha que ser executado toda vez que a sessão for aberta; a chance de um erro no código passar batido por muito nesse cenário é consideravelmente menor e, consequentemente, a sua chance se conseguir resolvê-lo sem maiores problemas é proporcionalmente maior. Já a segunda consequência de manter a memória do R funcionando é um pouco menos sutil: o que será que acontece quando você estiver trabalhando com objetos muito grandes? Geralmente queremos trabalhar com bases pesadas na memória o mínimo de tempo possível, então o ideal é tratá-la e já salvar o resultado deste processo em um arquivo intermediário para que ele possa ser carregado somente quando necessário. Com o .RData sendo salvo, no entando, toda vez que você abrir o seu R a base gigante será carregada imediatamente, mesmo que você não quisesse trabalhar com ela! A melhor forma de não ter que controlar quais objetos devem ou não ficar no ambiente ao fim de uma sessão é desabilitando essa funcionalidade como um todo. 2.2.3 Como desligar a memória do R O processo de desabilitar o .RData e o .Rhistory é bastante simples e afeta todos os projetos do seu computador, então você só precisará fazer isso uma vez. Basta selecionar Tools &gt; Global Options… na aba de ferramentas do RStudio e então ajustar três configurações. No final sua página das opções gerais deve ficar como na imagem abaixo: Feito isso, você provavelmente vai demorar um pouco para se acostumar com a ausência da memória. Esse desconforto temporário é esperado, mas resista ao impulso de habilitar os recursos novamente porque no longo prazo os benefícios serão enormes. 2.3 Rproj e diretórios Esforço Correto: evite o surgimento de estados insalubres e crie estados saudáveis "],
["versoes.html", "3 Versões 3.1 Sobre versões 3.2 Git e Github 3.3 Packrat", " 3 Versões 3.1 Sobre versões 3.2 Git e Github Compreensão Correta: nossas ações têm consequências, então limpe seu caminho da confusão, do equívoco e do pensamento iludido 3.3 Packrat Pensamento Correto: considere tudo e todos como impermanentes, uma fonte de sofrimento "],
["dados.html", "4 Dados 4.1 Sobre dados 4.2 Data e data-raw 4.3 RDSs intermediários", " 4 Dados 4.1 Sobre dados 4.2 Data e data-raw Ação Correta: abstenha-se de matar, de roubar e da promiscuidade 4.3 RDSs intermediários Fala Correta: nunca fale algo que não é benéfico e fale somente o que é verdadeiro e benéfico "],
["arquivos.html", "5 Arquivos 5.1 Sobre os arquivos 5.2 Reiniciar a sessão 5.3 Arquivos minimalistas", " 5 Arquivos 5.1 Sobre os arquivos 5.2 Reiniciar a sessão Concentração Correta: procure um estado de consciência sem objeto ou sujeito 5.3 Arquivos minimalistas Meio de Vida Correto: não aceite tudo e não possua mais do que é estritamente necessário "]
]
